# PostgreSQL Configuration for LMAX Exchange
# Optimized for high-throughput batched inserts

# Memory Settings
shared_buffers = 512MB                # 25% of available RAM (for 2GB container)
work_mem = 64MB                       # Increased for batch operations
maintenance_work_mem = 256MB          # For index creation and VACUUM
effective_cache_size = 1GB            # OS cache estimate

# WAL Settings for High Performance
wal_level = replica
wal_buffers = 16MB
checkpoint_timeout = 15min            # Longer checkpoints for batch workloads
checkpoint_completion_target = 0.9
max_wal_size = 2GB
min_wal_size = 512MB

# Connection Settings
listen_addresses = '*'               # Listen on all interfaces for Docker
max_connections = 100
shared_preload_libraries = 'pg_stat_statements'

# Query Planner
random_page_cost = 1.1               # Assuming SSD storage
effective_io_concurrency = 200       # SSD optimization

# Batch Insert Optimizations
synchronous_commit = off             # Async commits for better throughput
commit_delay = 100000                # 100ms commit delay for batching
commit_siblings = 10                 # Commit when 10 transactions waiting

# Autovacuum Settings
autovacuum = on
autovacuum_max_workers = 3
autovacuum_naptime = 10s             # More frequent autovacuum for high insert rate
autovacuum_vacuum_threshold = 1000
autovacuum_analyze_threshold = 500

# Logging
log_statement = 'none'               # Reduce logging overhead
log_min_duration_statement = 1000    # Log slow queries only
log_checkpoints = on
log_connections = off
log_disconnections = off
log_lock_waits = on

# Background Writer
bgwriter_delay = 200ms
bgwriter_lru_maxpages = 100
bgwriter_lru_multiplier = 2.0

# Archive Settings (disabled for performance)
archive_mode = off

# Statistics
track_activities = on
track_counts = on
track_io_timing = on
track_functions = none

# Lock Management
deadlock_timeout = 1s
lock_timeout = 30s

# Client Connection Defaults
default_statistics_target = 100 